Random notes about the save file memory layout from GAME.EXE

Loading function at CS:2ce2
Filename at DS:2

1. 0x3500 bytes, at DS:2ac

   Save files start with "world" data, from the adventure-style engine.
   Size is indirect from word ptr DS:[2a5] and addr is indirect from DS:[2a3]
   but in practice both values will always be constant.

2. 0xA00 bytes, at DS:b612

   Next is the "circuit" data, which also contains things like robot status.
   This is represented as a range between two addresses (b612 to c012) rather
   than with a hardcoded size.

3. 0x2000 bytes, at DS:8c00

   Chip information, 1kB each for 8 chips. Note that this is the 1kB "CHP"
   style chip data, which includes just the pin status and the gate bytecodes.
   The longer "CSV" files used by Innovation Lab also include pin directions,
   bytecode length, and the chip documentation page.

4. 0x40 bytes, at DS:ac08

   Chip pin directions? (8 pins * 8 chips)

5. Five individual bytes:

   DS:4851

   DS:4852

   DS:3d25

   DS:3d26

   DS:acae
     This is the decimal parameter byte passed to GAME.EXE,
     in this case it'll always be a world ID code.

     Note that changes to this value don't take effect immediately.
     This value is checked during initialization, and it chooses from
     multiple copies of the game main loop, each with level-specific
     features added.

     Level transitions are best implemented by re-exec'ing the GAME
     binary entirely, since each one has its own main loop. Teleporting
     is done normally by tail-calling a new world's main loop and
     leaking the stack frames from the previous world.

